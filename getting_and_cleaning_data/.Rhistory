View(temp2)
temp[,1]
names(temp[,1])
colname(temp[,1])
colnames(temp[,1])
View(temp)
colnames(temp)
temp2 = cbind(temp[,1], tempsub, temp[,1338:1342])
View(temp2)
colnames(temp2)[1] = "patient_id_external"
View(temp2)
saveRDS(temp2, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_Combined_Subset_JJ20150520_BF3.rds")
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
View(temp)
tail(colnames(temp), n = 15)
View(temp2)
temp3 = readRDS("/nfs/Analysis/AA01DE/Discovery/DataMatrices/aa01de_discovery_NAs_mtrx_140429.rds")
View(temp3)
tail(colnames(temp3), n = 15)
AA01DIDE_20140516_discovery_matrix.rds
temp3 = readRDS("/nfs/Analysis/MRM_Informatics/Final_DataMatrices/AA01DIDE_20140516_discovery_matrix.rds")
View(temp3)
temp3 = readRDS("/nfs/Analysis/MRM_Informatics/production_AA01/DataMatrices/AA01DI_20140414_discovery_matrix.rds")
View(temp3)
temp3 = readRDS("/nfs/Analysis/AA01DE/Discovery/DataMatrices/aa01de_discovery_NAs_mtrx_140429.rds")
View(temp3)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
di_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
de_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DE_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
View(de_primary_data)
View(di_primary_data)
View(dide_primary_data)
View(dide_primary_data)
temp = read.table("./UCI HAR Dataset/test/X_test.txt")
View(temp)
temp2 = read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
View(temp2)
temp3 = read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt")
train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = "X")
train <- read.table("./UCI HAR Dataset/train/X_train.txt")
View(train)
variable_names <- read.table("./UCI HAR Dataset/train/features.txt")
variable_names <- read.table("./UCI HAR Dataset/features.txt")
View(variable_names)
variable_names <- read.table("./UCI HAR Dataset/features.txt", col.names = c("num","variable_name"))
View(variable_names)
train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = variable_names$variable_name)
View(train)
colnames(train)
View(variable_names)
measurement_names <- read.table("./UCI HAR Dataset/features.txt", col.names = c("num","measurement_name"))
train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name)
View(measurement_names)
measurement_names <- read.table("./UCI HAR Dataset/features.txt", col.names = c("num","measurement_name"))
train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
View(train)
subject_label     <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
View(subject_label)
activity_label    <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "activity")
train_measurements   <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
train_subject_label  <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
train_activity_label <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "activity")
train_data           <- cbind(subject_label, activity_label, train_measurements)
View(train_data)
measurement_names    <- read.table("./UCI HAR Dataset/features.txt", col.names = c("num","measurement_name"))
train_measurements   <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
train_subject_label  <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
train_activity_label <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "activity")
train_data           <- cbind(train_subject_label, train_activity_label, train_measurements)
test_measurements   <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
test_subject_label  <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
test_activity_label <- read.table("./UCI HAR Dataset/test/y_test.txt", col.names = "activity")
test_data           <- cbind(test_subject_label, test_activity_label, test_measurements)
data <- rbind(train_data, test_data)
View(data)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
View(elisa)
elisa_cea = elisa[1:254,]
elisa_pkm2 = elisa[255:508,]
View(elisa_cea)
View(elisa_pkm2)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID)]
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID)]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
View(elisa_cea)
View(elisa_pkm2)
View(elisa_cea)
View(elisa_pkm2)
View(elisa)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID)]
elisa = elisa[order(elisa$ExternalID),]
View(elisa)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
View(elisa_cea)
View(elisa_pkm2)
di_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
di_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
de_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DE_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
View(dide_primary_data)
temp3 = readRDS("/nfs/Analysis/AA01DE/Discovery/DataMatrices/aa01de_discovery_NAs_mtrx_140429.rds")
tail(colnames(temp3), n = 15)
tail(colnames(dide_primary_data), n = 15)
temp3 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
tail(colnames(temp3), n = 15)
head(colnames(temp3), n = 15)
View(elisa_cea)
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_CEA = elisa_cea$concn.ng.mL, ELISA_PKM2 = elisa_pkm2$concn.ng.mL)
View(elisa_final)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
View(dide_primary_data)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_CEA = elisa_cea$concn.ng.mL, ELISA_PKM2 = elisa_pkm2$concn.ng.mL)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
dide_primary_data = merge(dide_primary_data, elisa_final, by.x = patient_id_external)
View(dide_primary_data)
?merge
dide_primary_data = merge(dide_primary_data, elisa_final, by = patient_id_external)
dide_primary_data = merge(dide_primary_data, elisa_final, by = dide_primary_data$patient_id_external)
elisa_final = elisa_final[elisa_final$patient_id_external %in% dide_primary_data$patient_id_external,]
View(elisa_final)
dide_primary_data = dide_primary_data[order(dide_primary_data$patient_id_external),]
View(dide_primary_data)
View(elisa)
View(elisa_final)
dide_primary_data = merge(dide_primary_data, elisa_final, by = "patient_id_external")
View(dide_primary_data)
tail(colnames(dide_primary_data), n = 15)
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.R")
View(dide_primary_data)
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/selected_features_JJ_BF4_20140520_1_unscaled_max_feat_4.rds")
temp[[1]]
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/selected_features_JJ_BF3_20140520_2_unscaled_max_feat_4.rds")
temp[[1]]
temp2 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
tail(colnames(temp2), n = 15)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_CEA = elisa_cea$concn.ng.mL, ELISA_PKM2 = elisa_pkm2$concn.ng.mL)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
dide_primary_data = dide_primary_data[order(dide_primary_data$patient_id_external),]
elisa_final = elisa_final[elisa_final$patient_id_external %in% dide_primary_data$patient_id_external,]
dide_primary_data = merge(dide_primary_data, elisa_final, by = "patient_id_external")
tail(colnames(dide_primary_data), n = 15)
colnames(dide_primary_data)
dide_primary_data = dide_primary_data[,c(1:1337, 1343:1344, 1338:1342)]
colnames(dide_primary_data)
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.R")
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/selected_features_JJ_BF3_20140520_2_unscaled_max_feat_4.rds")
temp[[1]]
temp2 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
tail(colnames(temp2), n = 15)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_HUMAN_CEA = elisa_cea$concn.ng.mL, ELISA_HUMAN_PKM2 = elisa_pkm2$concn.ng.mL)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
dide_primary_data = dide_primary_data[order(dide_primary_data$patient_id_external),]
elisa_final = elisa_final[elisa_final$patient_id_external %in% dide_primary_data$patient_id_external,]
dide_primary_data = merge(dide_primary_data, elisa_final, by = "patient_id_external")
colnames(dide_primary_data)
# Reshuffle ELISA features before last couple columns
dide_primary_data = dide_primary_data[,c(1:1337, 1343:1344, 1338:1342)]
colnames(dide_primary_data)
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.R")
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/selected_features_JJ_BF3_20140520_2_unscaled_max_feat_4.rds")
temp[[1]]
temp2 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
tail(colnames(temp2), n = 15)
colnames(temp2)
temp3 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/prepped_data.rds")
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/selected_features_JJ_BF3_20140520_2_unscaled_max_feat_4.rds")
temp[[1]]
temp2 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
colnames(temp2)
temp3 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/prepped_data.rds")
View(dide_primary_data)
tail(colnames(dide_primary_data))
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_CEA_HUMAN_CEA = elisa_cea$concn.ng.mL, ELISA_PKM2_HUMAN_PKM2 = elisa_pkm2$concn.ng.mL)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
dide_primary_data = dide_primary_data[order(dide_primary_data$patient_id_external),]
elisa_final = elisa_final[elisa_final$patient_id_external %in% dide_primary_data$patient_id_external,]
dide_primary_data = merge(dide_primary_data, elisa_final, by = "patient_id_external")
#colnames(dide_primary_data)
# Reshuffle ELISA features before last couple columns
dide_primary_data = dide_primary_data[,c(1:1337, 1343:1344, 1338:1342)]
tail(colnames(dide_primary_data))
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.R")
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.rds")
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_CEA = elisa_cea$concn.ng.mL, ELISA_PKM2 = elisa_pkm2$concn.ng.mL)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
dide_primary_data = dide_primary_data[order(dide_primary_data$patient_id_external),]
elisa_final = elisa_final[elisa_final$patient_id_external %in% dide_primary_data$patient_id_external,]
dide_primary_data = merge(dide_primary_data, elisa_final, by = "patient_id_external")
#colnames(dide_primary_data)
# Reshuffle ELISA features before last couple columns
dide_primary_data = dide_primary_data[,c(1:1337, 1343:1344, 1338:1342)]
#colnames(dide_primary_data)
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.rds")
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/selected_features_JJ_BF3_20140520_2_unscaled_max_feat_4.rds")
temp[[1]]
temp2 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
colnames(temp2)
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_CEA_HUMAN_CEA = elisa_cea$concn.ng.mL, ELISA_PKM2HUMAN_PKM2 = elisa_pkm2$concn.ng.mL)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
dide_primary_data = dide_primary_data[order(dide_primary_data$patient_id_external),]
elisa_final = elisa_final[elisa_final$patient_id_external %in% dide_primary_data$patient_id_external,]
dide_primary_data = merge(dide_primary_data, elisa_final, by = "patient_id_external")
#colnames(dide_primary_data)
# Reshuffle ELISA features before last couple columns
dide_primary_data = dide_primary_data[,c(1:1337, 1343:1344, 1338:1342)]
#colnames(dide_primary_data)
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.rds")
elisa = read.csv("/nfs/Analysis/AA01E2/DataFiles/aa_elisa2_disc_val_140520.csv")
elisa = elisa[order(elisa$ExternalID),]
elisa_cea = elisa[elisa$Protein == "CEA",]
#elisa_cea = elisa_cea[order(elisa_cea$),]
elisa_pkm2 = elisa[elisa$Protein == "PKM2",]
elisa_final = data.frame(patient_id_external = elisa_cea$ExternalID, ELISA_CEA_HUMAN_CEA = elisa_cea$concn.ng.mL, ELISA_PKM2_HUMAN_PKM2 = elisa_pkm2$concn.ng.mL)
dide_primary_data = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140516/AA01DI_DE_Combined.rds")
dide_primary_data = dide_primary_data[order(dide_primary_data$patient_id_external),]
elisa_final = elisa_final[elisa_final$patient_id_external %in% dide_primary_data$patient_id_external,]
dide_primary_data = merge(dide_primary_data, elisa_final, by = "patient_id_external")
#colnames(dide_primary_data)
# Reshuffle ELISA features before last couple columns
dide_primary_data = dide_primary_data[,c(1:1337, 1343:1344, 1338:1342)]
#colnames(dide_primary_data)
saveRDS(dide_primary_data, "/nfs/Analysis/BioinfoSWDev/AKao/05_AA/20140520/AA01DI_DE_ELISA2_Combined.rds")
temp = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/selected_features_JJ_BF3_20140520_2_unscaled_max_feat_4.rds")
temp[[1]]
temp2 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/primary_data.rds")
colnames(temp2)
temp3 = readRDS("/nfs/Analysis/BioinfoSWDev/AKao/R_Common/WORKING_AK_V4-b_Automated_Classifier_Analysis/common/AA01DI+DE+ELISA2_ProMedDx_Concentration__All___All_Pair_Min_Log2_Dx/prepped_data.rds")
options(stringsAsFactors = FALSE)
setwd("~/git_coursera/getting_and_cleaning_data")
measurement_names    <- read.table("./UCI HAR Dataset/features.txt", col.names = c("num","measurement_name"))
train_measurements   <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
train_subject_label  <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
train_activity_label <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "activity")
train_data           <- cbind(train_subject_label, train_activity_label, train_measurements)
test_measurements    <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
test_subject_label   <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
test_activity_label  <- read.table("./UCI HAR Dataset/test/y_test.txt", col.names = "activity")
test_data            <- cbind(test_subject_label, test_activity_label, test_measurements)
full_data <- rbind(train_data, test_data)
View(full_data)
colnames = c("a_mean_a","a_sd_a","b_mean_b","no","b_sd_b")
?grep
grep("mean", colnames)
grep(c("mean","sd"), colnames)
colnames = c("a_mean_a","a_sd_a","b_mean_b","no","b_sd_b")
grep(c("mean","sd"), colnames)
colnames = c("a_mean_a","a_sd_a","b_mean_b","no","b_sd_b")
grep(c("mean|sd"), colnames)
View(full_data)
train_measurements   <- train_measurements[,grep(c("mean|sd"), colnames(train_measurements))]
View(train_measurements)
train_measurements   <- train_measurements[,grep(c("mean|std"), colnames(train_measurements))]
View(train_measurements)
measurement_names
train_measurements   <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
train_measurements   <- train_measurements[,grep(c("mean|std"), colnames(train_measurements))]
View(train_measurements)
train_measurements   <- train_measurements[,grep(c("mean()|std()"), colnames(train_measurements))]
View(train_measurements)
train_measurements   <- train_measurements[,grep(c("mean\(\)|std\(\)"), colnames(train_measurements))]
train_measurements   <- train_measurements[,grep(c("mean\\(\\)|std\\(\\)"), colnames(train_measurements))]
## 1. Let's start loading data from files and putting them into a data frame
## NOTE: Remember, there are 33 variables (e.g. tBodyAcc-X, tBodyAcc-Y...) time 17 estimates (e.g. mean, standard deviation...) = 561 variables
measurement_names    <- read.table("./UCI HAR Dataset/features.txt", col.names = c("num","measurement_name"))
measurement_names
## 1A.Training data
train_measurements   <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
## Subset out only columns of mean() and std() measurements
train_measurements   <- train_measurements[,grep(c("mean\\(\\)|std\\(\\)"), colnames(train_measurements))]
train_subject_label  <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
train_activity_label <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "activity")
train_data           <- cbind(train_subject_label, train_activity_label, train_measurements)
## 1B. Testing data
test_measurements    <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
## Subset out only columns of mean() and std() measurements
test_measurements    <- test_measurements[,grep(c("mean\\(\\)|std\\(\\)"), colnames(test_measurements))]
test_subject_label   <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
test_activity_label  <- read.table("./UCI HAR Dataset/test/y_test.txt", col.names = "activity")
test_data            <- cbind(test_subject_label, test_activity_label, test_measurements)
## 1C. rbind together the training and test data into one data frame
full_data <- rbind(train_data, test_data)
View(full_data)
View(full_data)
?split
View(full_data)
full_data <- split(full_data, c(subject, activity))
full_data <- split(full_data, c(full_data$subject, full_data$activity))
full_data[[1]]
View(full_data[[1]])
## 1. Let's start loading data from files and putting them into a data frame
## NOTE: Remember, there are 33 variables (e.g. tBodyAcc-X, tBodyAcc-Y...) time 17 estimates (e.g. mean, standard deviation...) = 561 variables
measurement_names    <- read.table("./UCI HAR Dataset/features.txt", col.names = c("num","measurement_name"))
## 1A.Training data
train_measurements   <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
## Subset mean ("mean()") and standard deviation ("std()") for each of the 33 measurements, e.g. tBodyAcc-mean()-X, tBodyAcc-std()-X...
train_measurements   <- train_measurements[,grep(c("mean\\(\\)|std\\(\\)"), colnames(train_measurements))]
train_subject_label  <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
train_activity_label <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "activity")
train_data           <- cbind(train_subject_label, train_activity_label, train_measurements)
## 1B. Testing data
test_measurements    <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = measurement_names$measurement_name, check.names = FALSE)
## Subset mean ("mean()") and standard deviation ("std()") for each of the 33 measurements, e.g. tBodyAcc-mean()-X, tBodyAcc-std()-X...
test_measurements    <- test_measurements[,grep(c("mean\\(\\)|std\\(\\)"), colnames(test_measurements))]
test_subject_label   <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
test_activity_label  <- read.table("./UCI HAR Dataset/test/y_test.txt", col.names = "activity")
test_data            <- cbind(test_subject_label, test_activity_label, test_measurements)
## 1C. rbind together the training and test data into one data frame
full_data <- rbind(train_data, test_data)
split_data <- split(full_data, list(full_data$subject, full_data$activity))
View(split_data[[1]])
?tapply
colmeans
colmean
temp = data.frame(a = c(1,1,1,1,1,1,1,1), b = c(2,2,2,2,2,2,2,2,2))
temp = data.frame(a = c(1,1,1,1,1,1,1,1), b = c(2,2,2,2,2,2,2,2))
colMeans(temp)
temp = data.frame(labels = c("A","B","C","D","E","F","G","H"), a = c(1,1,1,1,1,1,1,1), b = c(2,2,2,2,2,2,2,2))
colMeans(temp)
FUNCTION_COL_MEANS <- function(incoming_data_frame){
return(
data.frame(
subject = incoming_data_frame$subject[1],
activity = incoming_data_frame$activity[1],
incoming_data_frame[,3:ncol(incoming_data_frame)]
))
}
split_by   <- list(full_data$subject, full_data$activity)
split_by   <- list(full_data$subject, full_data$activity)
split_data <- tapply(X = full_data, INDEX = split_by, FUN = FUNCTION_COL_MEANS)
colMeans(temp[,2:3])
class(colMeans(temp[,2:3]))
as.data.frame(colMeans(temp[,2:3]))
t(as.data.frame(colMeans(temp[,2:3])))
FUNCTION_COL_MEANS <- function(incoming_data_frame){
return(
data.frame(
subject = incoming_data_frame$subject[1],
activity = incoming_data_frame$activity[1],
t(as.data.frame(incoming_data_frame[,3:ncol(incoming_data_frame)))]
)
)
}
split_by   <- list(full_data$subject, full_data$activity)
split_data <- tapply(X = full_data, INDEX = split_by, FUN = FUNCTION_COL_MEANS)
temp = data.frame(labels = c("A","B","C","D","E","F","G","H"), a = c(1,1,1,1,1,1,1,1), b = c(2,2,2,2,2,2,2,2))
t(as.data.frame(colMeans(temp[,2:3])))
class(t(as.data.frame(colMeans(temp[,2:3]))))
class(as.data.frame(t(as.data.frame(colMeans(temp[,2:3])))))
temp = data.frame(labels = c("A","B","C","D","E","F","G","H"), a = c(1,1,1,1,1,1,1,1), b = c(2,2,2,2,2,2,2,2))
class(as.data.frame(t(as.data.frame(colMeans(temp[,2:3])))))
as.data.frame(t(as.data.frame(colMeans(temp[,2:3]))))
FUNCTION_COL_MEANS <- function(incoming_data_frame){
return(
data.frame(
subject = incoming_data_frame$subject[1],
activity = incoming_data_frame$activity[1],
as.data.frame(t(as.data.frame(incoming_data_frame[,3:ncol(incoming_data_frame))))]
)
)
}
split_by   <- list(full_data$subject, full_data$activity)
split_data <- tapply(X = full_data, INDEX = split_by, FUN = FUNCTION_COL_MEANS)
split <- split_data[[1]]
View(split)
colMeans(temp[,2:ncol(split)]
colMeans(temp[,2:ncol(split)])
colMeans(temp[,2:ncol(split)])
colMeans(temp[,2:ncols(split)])
ncol
ncol(split)
colMeans(temp[,2:ncol(split)])
colMeans(split[,2:ncol(split)])
class(colMeans(split[,2:ncol(split)]))
as.matrix(colMeans(split[,2:ncol(split)]))
t(as.matrix(colMeans(split[,2:ncol(split)])))
as.data.frame(t(as.matrix(colMeans(split[,2:ncol(split)]))))
as.data.frame(t(as.matrix(colMeans(split[,3:ncol(split)]))))
temp <- as.data.frame(t(as.matrix(colMeans(split[,3:ncol(split)]))))
View(temp)
temp <- data.frame(as.data.frame(t(as.matrix(colMeans(split[,3:ncol(split)]))))
)
View(temp)
?as.data.frame
?as.matrix
split <- split_data[[1]]
View(split)
colMeans(split[,2:ncol(split)])
split <- colMeans(split[,2:ncol(split)])
split <- as.matrix(split)
View(split)
split <- t(split)
View(split)
split <- as.data.frame(split, check.names = FALSE)
View(split)
split <- split_data[[1]]
split <- colMeans(split)
split <- as.matrix(split)
split <- t(split)
split <- as.data.frame(split, check.names = FALSE)
View(split)
split <- split_data[[1]]
View(split)
FUNCTION_COL_MEANS <- function(incoming_data_frame){
column_means <- colMeans(incoming_data_frame) # The mean of the same subject number and activity number is the same number
column_means <- as.matrix(column_means)
column_means <- t(column_means)
column_means <- as.data.frame(column_means, check.names = FALSE)
return(
)
}
split_by   <- list(full_data$subject, full_data$activity)
split_data <- tapply(X = full_data, INDEX = split_by, FUN = FUNCTION_COL_MEANS)
FUNCTION_COL_MEANS <- function(incoming_data_frame){
column_means <- colMeans(incoming_data_frame) # The mean of the same subject number and activity number is the same number
column_means <- as.matrix(column_means)
column_means <- t(column_means)
column_means <- as.data.frame(column_means, check.names = FALSE)
return(column_means)
}
split_by   <- list(full_data$subject, full_data$activity)
split_data <- tapply(X = full_data, INDEX = split_by, FUN = FUNCTION_COL_MEANS)
FUNCTION_COL_MEANS <- function(incoming_data_frame){
column_means <- colMeans(incoming_data_frame) # The mean of the same subject number and activity number is the same number
column_means <- as.matrix(column_means)
column_means <- t(column_means)
column_means <- as.data.frame(column_means, check.names = FALSE)
return(column_means)
}
FUNCTION_COL_MEANS(split_data[[1]])
FUNCTION_COL_MEANS(split_data[[2]])
FUNCTION_COL_MEANS(split_data[[3]])
?lapply
split_by   <- list(full_data$subject, full_data$activity)
split_data <- split(full_data, split_by)
split_data <- lapply(X = split_data, FUN = FUNCTION_COL_MEANS)
split_data <- lapply(X = split_data, FUN = FUNCTION_COL_MEANS)
final_data <- do.cal(rbind, split_data)
final_data <- do.call(rbind, split_data)
View(final_data)
rownames(final_data) = NULL
View(final_data)
activities_names    <- read.table("./UCI HAR Dataset/activity_labels.txt", col.names = c("num","activity_name"))
View(activities_names)
temp <- merge(final_data, activities_names, by.x = final_data$activity , by.y = activities_names$num)
?merge
temp <- merge(final_data, activities_names, by.x = final_data$activity , by.y = activities_names$num, all.x = all)
temp <- merge(final_data, activities_names, by.x = final_data$activity , by.y = activities_names$num, all.x = TRUE)
temp <- merge(final_data, activities_names, by.x = "activity" , by.y = "num", all.x = TRUE)
View(temp)
temp <- merge(activities_names, final_data, by.x = "num", by.y = "activity", all.x = TRUE)
View(temp)
activities_names    <- read.table("./UCI HAR Dataset/activity_labels.txt", col.names = c("activity","activity_name"))
temp <- merge(activities_names, final_data, by.x = "num", by.y = "activity", all.x = TRUE)
temp <- merge(activities_names, final_data, by = "activity", all.x = TRUE)
View(temp)
View(final_data)
?merge
?gsub
?aggregate
?rowMeans
?read.table
?read.fwf
sd(c(5,8,12))
which.min(c(4,1,6))
?which.min
summary(c(1,2,3))
WHO = read.csv("~/Downloads/WHO.csv")
str(WHO)
mean(WHO$Over60)
View(WHO)
WHO = WHO[order(WHO$Over60),]
View(WHO)
WHO = WHO[order(WHO$LiteracyRate),]
View(WHO)
